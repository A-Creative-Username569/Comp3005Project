Appliction that lets users browse a collection of books:

"A user can search the bookstore by book name,author name,ISBN,genre,etc."

Assumption:A search relationship set,a bookstore entity set consisting of the attributes
book name,author name,ISBN,genre,a user entity set.

A many to many relationship between the user entity set and bookstore entity set(where the user can search
for as many books as they please and the same book can be searched by multiple users)

"When a book is selected information on the author(s),genre,publisher,number of pages,price,etc can be viewed."

Assumption:The book entity set consists of the attributes author(s),genre,publisher,number of pages,price,
(other possible attributes title,number of checkouts,date it was released,a book id)

"A user can select as many books as she likes to be added to the checkout basket"

Assumption:a user entity set,a relationship set called checkout basket,
a many to one relationship(where the user can checkout as many books as they please but only one book can be checked out
by one user at a time).

Attributes for the user entity set consisting of(id)

"A user needs to be registered in the bookstore to be able to checkout"

Assumption:A reg_user relationship set,a registration entity set consisting of(id),a user entity set

A one to many relationship set between user entity set and registration entity set(where the user can register only once
but there can be multiple registrations by multiple users)

"When checking out the user inserts billling and shipping information(can be different then those used in registration)"

Assumption:The user entity set consists of the attributes billing,and shipping.

"The bookstore has the feature of tracking an order via an order number"

Assumption:the bookstore has the attribute order number
issue:not sure if we should add more to this

"A user can use this order number to track where the order is currently.
Although shipping is carried out by a third party shipping service the online bookstore should have the tracking infromation
available for when the user inquires about an order using the order number"

Assumption:A relationship set called inquire_order,

A many to many relationship set between bookstore and user(Where the user can inquire the order number for as many
books as they please and the same book can be asked for the order number by multiple users)

"Assume all books are shipped from only one warehouse(no multiple order numbers for multiple books shipped from
multiple warehouses)"

Issue:Not sure what to do for this

"The bookstore owners can add new books to their collections or remove books from their store"

Assumption:entity set called owner,a relationship set called add,a relationship set called remove

A one to many relationship between bookstore and owner (where the owner can add/remove as many books as they please
but the same book can only be added/removed by one owner).


"They also need to store information on the publishes of books such as name,address,email address,phone number(s),banking
account"

Assumption:A publisher entity set that contains the attributes name,address,email address,phone number(s),banking account

"The banking account for publishers is used to transfer a percentage of the sales of books pbulished by these publishers"

Assumption:A bank account entity set,a relationship set called bank_publisher, bank attributes(id,percentage),

A one to many relationship between publishers and bank_account(As a publisher can have multiple bank accounts
but the same bank account can only be used by one publisher)

"This percentage is variable and changes from one book to another"
Issue:Not sure how we can show this using ERD

"The owners should have access to reports that show sales vs expenditures,sales per genres,sales per author,etc"

Assumption:An entity set called reports that consist of the attribute sales vs expenditures,sales per genres,sales per author,

A relationship set called access

A many to one relationship set between owners and reports(where there can be multiple owners accessing a report and
the same report can be access by multiple owners).

Issue:How would we show that the right owner(s) is accessing the report.

"The application should also be able to automatically place orders for new books if the remaining quantity is less than a given threshold
(ex 10).This is done by sending an email to the publihser of the limited books to order a number of books equal to how many
books were sold in the previous month"


General issues:
Should we have the reg_user be the ones checking out(along with what normal users can do) and for normal users be the ones only searching for the books,
checking the order number?
